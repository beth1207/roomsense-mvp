{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO PC\\\\OneDrive\\\\Desktop\\\\coding projects 2024\\\\roomsense-mvp\\\\src\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // For making HTTP requests to the backend API\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // State variables to store sensor data and alerts\n  const [roomConditions, setRoomConditions] = useState({});\n  const [recentReadings, setRecentReadings] = useState([]);\n  const [alerts, setAlerts] = useState([]);\n\n  // Function to fetch sensor data and alerts from the backend API\n  const fetchSensorData = async () => {\n    try {\n      // Fetch room conditions\n      const roomConditionsResponse = await axios.get('/api/roomConditions');\n      setRoomConditions(roomConditionsResponse.data);\n\n      // Fetch recent sensor readings\n      const recentReadingsResponse = await axios.get('/api/recentReadings');\n      setRecentReadings(recentReadingsResponse.data);\n\n      // Fetch alerts\n      const alertsResponse = await axios.get('/api/alerts');\n      setAlerts(alertsResponse.data);\n    } catch (error) {\n      console.error('Error fetching sensor data:', error);\n    }\n  };\n\n  // Fetch sensor data and alerts when the component mounts\n  useEffect(() => {\n    fetchSensorData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Room Conditions Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Temperature: \", roomConditions.temperature, \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", roomConditions.humidity, \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Air Quality: \", roomConditions.airQuality]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Occupancy: \", roomConditions.occupancy]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recent-readings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Recent Sensor Readings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recentReadings.map((reading, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [reading.timestamp, \": \", reading.value]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alerts\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Alerts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: alerts.map((alert, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: alert.message\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"insights\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Insights and Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Coming soon...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Coming soon...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"3yNj7E8bN8L3YWhECbMxzMRqt2k=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","_s","roomConditions","setRoomConditions","recentReadings","setRecentReadings","alerts","setAlerts","fetchSensorData","roomConditionsResponse","get","data","recentReadingsResponse","alertsResponse","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","temperature","humidity","airQuality","occupancy","map","reading","index","timestamp","value","alert","message","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO PC/OneDrive/Desktop/coding projects 2024/roomsense-mvp/src/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'; // For making HTTP requests to the backend API\r\nimport './Dashboard.css';\r\n\r\n\r\nconst Dashboard = () => {\r\n  // State variables to store sensor data and alerts\r\n  const [roomConditions, setRoomConditions] = useState({});\r\n  const [recentReadings, setRecentReadings] = useState([]);\r\n  const [alerts, setAlerts] = useState([]);\r\n\r\n  // Function to fetch sensor data and alerts from the backend API\r\n  const fetchSensorData = async () => {\r\n    try {\r\n      // Fetch room conditions\r\n      const roomConditionsResponse = await axios.get('/api/roomConditions');\r\n      setRoomConditions(roomConditionsResponse.data);\r\n\r\n      // Fetch recent sensor readings\r\n      const recentReadingsResponse = await axios.get('/api/recentReadings');\r\n      setRecentReadings(recentReadingsResponse.data);\r\n\r\n      // Fetch alerts\r\n      const alertsResponse = await axios.get('/api/alerts');\r\n      setAlerts(alertsResponse.data);\r\n    } catch (error) {\r\n      console.error('Error fetching sensor data:', error);\r\n    }\r\n  };\r\n\r\n  // Fetch sensor data and alerts when the component mounts\r\n  useEffect(() => {\r\n    fetchSensorData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      {/* Summary Section */}\r\n      <div className=\"summary\">\r\n        <h2>Room Conditions Summary</h2>\r\n        {/* Display room conditions */}\r\n        <p>Temperature: {roomConditions.temperature} Â°C</p>\r\n        <p>Humidity: {roomConditions.humidity} %</p>\r\n        <p>Air Quality: {roomConditions.airQuality}</p>\r\n        <p>Occupancy: {roomConditions.occupancy}</p>\r\n      </div>\r\n\r\n      {/* Recent Sensor Readings */}\r\n      <div className=\"recent-readings\">\r\n        <h2>Recent Sensor Readings</h2>\r\n        {/* Display recent sensor readings */}\r\n        <ul>\r\n          {recentReadings.map((reading, index) => (\r\n            <li key={index}>\r\n              {reading.timestamp}: {reading.value}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Alerts Section */}\r\n      <div className=\"alerts\">\r\n        <h2>Alerts</h2>\r\n        {/* Display alerts */}\r\n        <ul>\r\n          {alerts.map((alert, index) => (\r\n            <li key={index}>{alert.message}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Insights and Recommendations */}\r\n      <div className=\"insights\">\r\n        <h2>Insights and Recommendations</h2>\r\n        {/* Placeholder for insights and recommendations */}\r\n        <p>Coming soon...</p>\r\n      </div>\r\n\r\n      {/* User Settings */}\r\n      <div className=\"settings\">\r\n        <h2>User Settings</h2>\r\n        {/* Placeholder for user settings */}\r\n        <p>Coming soon...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}